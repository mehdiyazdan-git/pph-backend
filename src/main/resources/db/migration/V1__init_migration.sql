CREATE TABLE addendum
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    addendum_number VARCHAR(255),
    contract_id     BIGINT,
    unit_price      BIGINT,
    quantity        BIGINT,
    start_date      date,
    end_date        date,
    year_id         BIGINT,
    CONSTRAINT pk_addendum PRIMARY KEY (id)
);

CREATE TABLE company_reportdto
(
    id                  BIGINT NOT NULL,
    name                VARCHAR(255),
    big_customer        BOOLEAN,
    quantity            BIGINT,
    avg_unit_price      BIGINT,
    amount              BIGINT,
    cumulative_quantity BIGINT,
    CONSTRAINT pk_companyreportdto PRIMARY KEY (id)
);

CREATE TABLE contract_item
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    unit_price  BIGINT,
    quantity    BIGINT,
    product_id  BIGINT,
    contract_id BIGINT,
    CONSTRAINT pk_contractitem PRIMARY KEY (id)
);

CREATE TABLE contracts
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    contract_number      VARCHAR(255),
    contract_description VARCHAR(255),
    start_date           date,
    end_date             date,
    advance_payment      BIGINT,
    performance_bond     BIGINT,
    insurance_deposit    BIGINT,
    customer_id          BIGINT,
    year_id              BIGINT,
    CONSTRAINT pk_contracts PRIMARY KEY (id)
);

CREATE TABLE customer
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name           VARCHAR(255),
    phone          VARCHAR(255),
    customer_code  VARCHAR(255),
    economic_code  VARCHAR(255),
    national_code  VARCHAR(255),
    monthly_report BOOLEAN,
    CONSTRAINT pk_customer PRIMARY KEY (id)
);

CREATE TABLE invoice
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    invoice_number    BIGINT,
    issued_date       date,
    due_date          date,
    contract_id       BIGINT,
    sales_type        VARCHAR(20),
    customer_id       BIGINT,
    invoice_status_id INTEGER,
    year_id           BIGINT,
    CONSTRAINT pk_invoice PRIMARY KEY (id)
);

CREATE TABLE invoice_item
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    product_id           BIGINT,
    quantity             INTEGER,
    unit_price           BIGINT,
    invoice_id           BIGINT,
    warehouse_receipt_id BIGINT,
    CONSTRAINT pk_invoice_item PRIMARY KEY (id)
);

CREATE TABLE invoice_status
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_invoice_status PRIMARY KEY (id)
);

CREATE TABLE my_table
(
    id             BIGINT NOT NULL,
    receiptno      BIGINT,
    description    TEXT,
    customer_code  TEXT,
    customer_name  TEXT,
    total_amount   DECIMAL,
    total_quantity BIGINT,
    item_count     BIGINT,
    CONSTRAINT pk_my_table PRIMARY KEY (id)
);

CREATE TABLE payment
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    payment_descryption VARCHAR(255),
    payment_date        date,
    payment_amount      DOUBLE PRECISION,
    customer_id         BIGINT,
    year_id             BIGINT,
    CONSTRAINT pk_payment PRIMARY KEY (id)
);

CREATE TABLE product
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    product_code      VARCHAR(255),
    product_name      VARCHAR(255),
    measurement_index VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_product PRIMARY KEY (id)
);

CREATE TABLE report
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    report_explanation VARCHAR(255),
    report_date        date,
    year_id            BIGINT,
    CONSTRAINT pk_report PRIMARY KEY (id)
);

CREATE TABLE report_item
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    unit_price           BIGINT,
    quantity             INTEGER,
    report_id            BIGINT,
    customer_id          BIGINT,
    warehouse_receipt_id BIGINT,
    CONSTRAINT pk_report_item PRIMARY KEY (id)
);

CREATE TABLE roles
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(20),
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE users
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username VARCHAR(20),
    email    VARCHAR(50),
    password VARCHAR(120),
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE users_roles
(
    role_id INTEGER NOT NULL,
    user_id BIGINT  NOT NULL,
    CONSTRAINT pk_users_roles PRIMARY KEY (role_id, user_id)
);

CREATE TABLE warehouse_receipt
(
    id                            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    warehouse_receipt_number      BIGINT,
    warehouse_receipt_date        date,
    warehouse_receipt_description VARCHAR(255),
    customer_id                   BIGINT,
    year_id                       BIGINT,
    CONSTRAINT pk_warehouse_receipt PRIMARY KEY (id)
);

CREATE TABLE warehouse_receipt_item
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    quantity             INTEGER,
    unit_price           BIGINT,
    warehouse_receipt_id BIGINT,
    product_id           BIGINT,
    year_id              BIGINT,
    CONSTRAINT pk_warehousereceiptitem PRIMARY KEY (id)
);

CREATE TABLE year
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name BIGINT,
    CONSTRAINT pk_year PRIMARY KEY (id)
);

ALTER TABLE users
    ADD CONSTRAINT uc_74165e195b2f7b25de690d14a UNIQUE (email);

ALTER TABLE users
    ADD CONSTRAINT uc_77584fbe74cc86922be2a3560 UNIQUE (username);

ALTER TABLE addendum
    ADD CONSTRAINT FK_ADDENDUM_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE addendum
    ADD CONSTRAINT FK_ADDENDUM__CONTRACT FOREIGN KEY (contract_id) REFERENCES contracts (id);

ALTER TABLE contract_item
    ADD CONSTRAINT FK_CONTRACTITEM_ON_CONTRACT FOREIGN KEY (contract_id) REFERENCES contracts (id);

ALTER TABLE contract_item
    ADD CONSTRAINT FK_CONTRACTITEM_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE contracts
    ADD CONSTRAINT FK_CONTRACTS_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE contracts
    ADD CONSTRAINT FK_CONTRACT__CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE invoice_item
    ADD CONSTRAINT FK_INVOICE_ITEM_ON_WAREHOUSE_RECEIPT FOREIGN KEY (warehouse_receipt_id) REFERENCES warehouse_receipt (id);

ALTER TABLE invoice_item
    ADD CONSTRAINT FK_INVOICE_ITEM__INVOICE FOREIGN KEY (invoice_id) REFERENCES invoice (id);

ALTER TABLE invoice_item
    ADD CONSTRAINT FK_INVOICE_ITEM__PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE invoice
    ADD CONSTRAINT FK_INVOICE_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE invoice
    ADD CONSTRAINT FK_INVOICE_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE invoice
    ADD CONSTRAINT FK_INVOICE__CONTRACT FOREIGN KEY (contract_id) REFERENCES contracts (id);

ALTER TABLE invoice
    ADD CONSTRAINT FK_INVOICE__INVOICE_STATUS FOREIGN KEY (invoice_status_id) REFERENCES invoice_status (id);

ALTER TABLE payment
    ADD CONSTRAINT FK_PAYMENT_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE payment
    ADD CONSTRAINT FK_PAYMENT__CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE report_item
    ADD CONSTRAINT FK_REPORT_ITEM_ON_WAREHOUSE_RECEIPT FOREIGN KEY (warehouse_receipt_id) REFERENCES warehouse_receipt (id);

ALTER TABLE report_item
    ADD CONSTRAINT FK_REPORT_ITEM__CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE report_item
    ADD CONSTRAINT FK_REPORT_ITEM__REPORT FOREIGN KEY (report_id) REFERENCES report (id);

ALTER TABLE report
    ADD CONSTRAINT FK_REPORT_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE warehouse_receipt_item
    ADD CONSTRAINT FK_WAREHOUSERECEIPTITEM_ON_WAREHOUSE_RECEIPT FOREIGN KEY (warehouse_receipt_id) REFERENCES warehouse_receipt (id);

ALTER TABLE warehouse_receipt_item
    ADD CONSTRAINT FK_WAREHOUSERECEIPTITEM_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE warehouse_receipt_item
    ADD CONSTRAINT FK_WAREHOUSE_RECEIPT_ITEM__PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE warehouse_receipt
    ADD CONSTRAINT FK_WAREHOUSE_RECEIPT_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE warehouse_receipt
    ADD CONSTRAINT FK_WAREHOUSE_RECEIPT_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE users_roles
    ADD CONSTRAINT fk_userol_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE users_roles
    ADD CONSTRAINT fk_userol_on_user FOREIGN KEY (user_id) REFERENCES users (id);